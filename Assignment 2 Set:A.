{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enter number:nitin\n",
      "String is not symmetric\n",
      "string is palindrome\n"
     ]
    }
   ],
   "source": [
    "#Check whether string is symentric or palindrom \n",
    "s=input(\"enter number:\")\n",
    "#code for symmetric string\n",
    "n=len(s)\n",
    "flag=0\n",
    "if(n%2)==0:\n",
    "    i=0\n",
    "    j=n//2\n",
    "    while i<n//2 and j<n:\n",
    "        if s[i]==s[j]:\n",
    "            i=i+1\n",
    "            j=j+1\n",
    "        else:\n",
    "            flag=1\n",
    "            break\n",
    "\n",
    "else:\n",
    "    flag=1\n",
    "\n",
    "\n",
    "if(flag==0):\n",
    "    print(\"String is symmetric\")\n",
    "else:\n",
    "    print(\"String is not symmetric\")\n",
    "\n",
    "#code for palindrom string\n",
    "\n",
    "i=0\n",
    "j=n-1\n",
    "flag=0\n",
    "while(i<n):\n",
    "    if s[i]==s[j]:\n",
    "        i=i+1\n",
    "        j=j-1\n",
    "    else:\n",
    "        flag=1\n",
    "        break\n",
    "\n",
    "if(flag==0):\n",
    "    print(\"string is palindrome\")\n",
    "else:\n",
    "    print(\"string is not palindrom\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter the Stringrbnb college shrirampur\n",
      "String in reverse order: rupmarirhs egelloc bnbr\n"
     ]
    }
   ],
   "source": [
    "# reverse the String in python\n",
    "a=input(\"Enter the String\")\n",
    "A=\"\"\n",
    "for i in a:\n",
    "    A=i+A\n",
    "print(\"String in reverse order:\",A)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter the Stringshrirampur\n",
      "Enter ith position:\n",
      "The string after removal of i'th character : shrirampur\n"
     ]
    }
   ],
   "source": [
    "# remove ith char from string\n",
    "a=input(\"Enter the String\")\n",
    "c=input(\"Enter ith position:\")\n",
    "b = \"\"\n",
    " \n",
    "for i in range(len(a)):\n",
    "    if i != c:\n",
    "        b = b + a[i]\n",
    " \n",
    "print (\"The string after removal of i'th character : \" + b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter the No1:5\n",
      "Enter the No2:6\n",
      "Enter the No3:8\n",
      "Max number is: 8\n",
      "None\n"
     ]
    }
   ],
   "source": [
    "#Python function to find max of three\n",
    "A=input(\"Enter the No1:\")\n",
    "B=input(\"Enter the No2:\")\n",
    "C=input(\"Enter the No3:\")\n",
    "def Max(A,B,C):\n",
    "    if(A>B) and (A>C):\n",
    "        print(\"Max number is:\",A)\n",
    "    elif(A<B) and (C<B):\n",
    "        print(\"Max number is:\",B)\n",
    "    else:\n",
    "        print(\"Max number is:\",C)\n",
    "\n",
    "print(Max(A,B,C))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Python function to sum no in list\n",
    "def sum():\n",
    "    a=[5,6,9,88,22,55,66,83,2]\n",
    "    b=0\n",
    "    for m in a:\n",
    "        b=b+m\n",
    "    print(\"sum of all numbers in a:\",b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enter stringrbnb college shirampur\n",
      "reversed string is:: rupmarihs egelloc bnbr\n"
     ]
    }
   ],
   "source": [
    "def reverse_str(s):\n",
    "    s1=\"\"\n",
    "    for ch in s:\n",
    "        s1=ch+s1\n",
    "    print(\"reversed string is::\",s1)\n",
    "\n",
    "\n",
    "s=input(\"enter string\")\n",
    "\n",
    "reverse_str(s)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
